source('5.R/2.EuroChemFunc.R', encoding = 'UTF-8')
# Место хранения файлов
path <- "1.Data/view_in_shiny_like_files"
vec_of_files <- list.files(path = path)

# Раздел меню с общими настройками
visual_layout_common <- list(
                             selectizeInput("from_where", label = "Choose input", choices = c("File","Downloaded"),options = list(create = TRUE), selected = "Downloaded"),
                             uiOutput("id2"),
                             textInput("email_pol", "White email for reporting", "n.burakov@dtwin.ru"),
                             actionButton("send_email", "Send Report", style="color: #001F3F; background-color: #FDC600; border-color: #FDC600"),
                             fileInput("user_file", "Send File", accept = ".csv"),
                             actionButton("update_data", "Update data", style="color: #001F3F; background-color: #FDC600; border-color: #FDC600"))

# Раздел меню с графиками для попарных корреляций
data <- tar_read(model_data)$model_data
list_axis_cor <- names(data)[which(names(data) %!in% c('year', 'month', 'gdp_less_1', "model", "err"))] # Определение названий осей по колонкам

visual_layout_corr <- list(
  
  menuItem("First correlation graphic",selectizeInput("Y_1", label = "Choose Y axis for first graph", choices = list_axis_cor, options = list(create = TRUE), selected = 'euro'),
                             selectizeInput("X_1", label = "Choose X axis for first graph", choices = list_axis_cor, options = list(create = TRUE), selected = 'oil'),
                             sliderInput('first_graph_year', 'Year', min = min(data$year), max = max(data$year), value = c(2012, 2020), sep = '')),   
        
  menuItem("Second correlation graphic", selectizeInput("Y_2", label = "Choose Y axis for second graph", choices = list_axis_cor, options = list(create = TRUE), selected = 'euro'),
           selectizeInput("X_2", label = "Choose X axis for second graph", choices = list_axis_cor, options = list(create = TRUE), selected = 'oil'),
           sliderInput('second_graph_year', 'Year', min = min(data$year), max = max(data$year), value = c(2012, 2020), sep = '')
  )
  )

# Раздел меню с графиками для модели и гистограммы
visual_layout_model <- list(
  sliderInput('model_year', 'Year', min = min(data$year), max = max(data$year), value = c(2012, 2020), sep = '')
)

# Загрузка
source('3.Shiny/121.EurochemP/visnetwork_fun.R', encoding = 'UTF-8')
source('3.Shiny/121.EurochemP/server.R', encoding = 'UTF-8')
source('3.Shiny/121.EurochemP/ui.R', encoding = 'UTF-8')


shinyApp(ui, server)

